<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user_mapper">

	<!-- 회원가입 저장 -->
	<insert id="saveUser" parameterType="User">
		INSERT INTO users 
		 VALUES (
		 SEQ_USERS_PK.nextval,
    #{userId},
    #{userPassword},
    #{userConfirmPassword},
    #{userEmail},
    #{userName},
    #{userBirth},
    #{userZipcode},
    #{userAddress},
    #{userDetailAddress},
    #{isMember}
		)	 
	</insert>

	<select id="findUserById" resultType="com.cafeapp.dto.user.User" parameterType="String">
        SELECT * FROM users WHERE user_id = #{userId}
    </select>


	<!-- 중복된 사용자 ID 확인 -->
	<select id="isDuplicatedId" resultType="int"
		parameterType="String">
		SELECT COUNT(*) FROM users WHERE user_id = #{userId}
	</select>
	
	
	<select id="findLoginUser" parameterType="User" resultType="User">
		SELECT * FROM users WHERE USER_ID = #{userId} AND user_password=#{userPassword} AND is_member=1
	</select>
	
	<select id="findLoginAdmin" parameterType="User" resultType="User">
		SELECT * FROM users WHERE USER_ID = #{userId} AND user_password=#{userPassword} AND is_member=2
	</select>
	

	
	<!-- 사용자 정보 업데이트 -->
	<update id="updateUser" parameterType="User">
	    UPDATE users
	    SET
	        user_password = #{userPassword},
	        user_confirm_password =#{userConfirmPassword},
	        user_email = #{userEmail},
	        user_zipcode = #{userZipcode},
	        user_address = #{userAddress},
	        user_detail_address = #{userDetailAddress}
	    WHERE
	    	 user_id = #{userId}
	</update>

	
	
	<!--아이디 찾기-->
	<select id="findUserByEmail" resultType="com.cafeapp.dto.user.User" parameterType="String">
    	SELECT * FROM users WHERE user_email = #{userEmail}
	</select>
	
	<select id="findEmailCheck" resultType="int">
		select count(*) from users where user_Email = #{UserEmail}
	</select>
	
	<!--비밀번호 찾기-->
	<select id="countUsers" resultType="Integer" parameterType="User">
	    SELECT COUNT(*) FROM users
	    WHERE user_id = #{userId} AND user_name = #{userName} AND user_email = #{userEmail}
	</select>
	
	<update id="updatePassword" parameterType="User">
	    UPDATE users
	    SET user_password = #{userPassword},
	    	user_confirm_password = #{userConfirmPassword}
	    WHERE user_id = #{userId} AND user_name = #{userName} AND user_email = #{userEmail}
	</update>

	<!-- 회원탈퇴 -->
	<update id="withdrawUser" parameterType="String">
	    UPDATE users
	    SET is_member = 0
	    WHERE user_id = #{userId}
	</update>
</mapper>